<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[极简的评论系统 - Valine]]></title>
    <url>%2F2018%2F01%2F21%2F%E6%9E%81%E7%AE%80%E7%9A%84%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%2F</url>
    <content type="text"><![CDATA[Valine 是一款基于 Leancloud 的快速、简洁且高效的无后端评论系统。 Valine 的原理只是作为一个前端的展示样式，评论的后台都托管在 Leancloud.（我的理解） 为什么使用它？ 极简。Valine 估计是 Hexo 评论系统里最简洁的一个了，且能够完美嵌入大部分主题。 自定义。不同于一体化的评论系统，前后端分离的 Valine 支持所有自定义的样式。 快速加载。我用过的几个评论系统在加载速度上，Valine和多说最快，來必利次之，disqus国内速度为0.（多说已倒，disqus被墙） 用法 主流的 Hexo-theme 大都是有内置的，直接按说明调用就行。 自定义的话，去 https://cdn.jsdelivr.net/npm/valine@1.1.9-beta2/dist/ 下载一个最新的Valine.min.js，放置于your theme/source/js，然后在valine.swig中调用这个文件。(地址一定要正确！)我是这样调用的：&lt;script src=&quot;/js/src/Valine.min.js&quot;&gt;&lt;/script&gt; 评论数据的管理：Leancloud&gt;应用&gt;存储&gt;ClassComment 我的自定义主题配置文件# Valine.# You can get your appid and appkey from https://leancloud.cn# more info please open https://github.com/xCss/Valinevaline: enable: true appid: 5hKMdkznoBrEqifa5hJFXkDW-gzGzoHsz # your leancloud application appid appkey: wo5zahjoTPlUS44ucl3QbhkB # your leancloud application appkey notify: false # mail notifier , https://github.com/xCss/Valine/wiki verify: false # Verification code placeholder: 说点什么吗？ valine.swig路径： themes/next/layout/_third-party/comments/valine.swig&#123;% if theme.valine.enable and theme.valine.appid and theme.valine.appkey %&#125; &lt;script src="//cdn1.lncld.net/static/js/3.0.4/av-min.js"&gt;&lt;/script&gt; &lt;script src="/js/src/Valine.min.js"&gt;&lt;/script&gt; &lt;script type="text/javascript"&gt; new Valine(&#123; av: AV, el: '#vcomments' , verify: &#123;&#123; theme.valine.verify &#125;&#125;, notify: &#123;&#123; theme.valine.notify &#125;&#125;, app_id: '&#123;&#123; theme.valine.appid &#125;&#125;', app_key: '&#123;&#123; theme.valine.appkey &#125;&#125;', guest_info:['nick'] ,// 评论只需要提供昵称 avatar:'hide', placeholder: '&#123;&#123; theme.valine.placeholder &#125;&#125;' &#125;); &lt;/script&gt;&#123;% endif %&#125; Valine.min.js路径： themes/nextnew/source/js/src/Valine.min.js代码太长了，我直接贴在 Gist index.swig至关重要！路径： themes/next/layout/_third-party/comments/index.swig&#123;% include 'valine.swig' %&#125; 参考 hexo-github博客——magnetic主题如何添加Valine评论系统 Valine – 一款极简的评论系统 结束语我把验证码，评论者需要填的邮箱和网站都去掉了。虽然有被刷评论的可能，却也给读者提供了方便。 何不在下面的评论框试一试？]]></content>
      <categories>
        <category>科技</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网站托管于 Coding]]></title>
    <url>%2F2017%2F12%2F31%2F%E7%BD%91%E7%AB%99%E6%89%98%E7%AE%A1%E4%BA%8E%20Coding%2F</url>
    <content type="text"><![CDATA[最近把网站的部署从GitHub Pages转移到了Coding Pages。当然，最初的地址linyuxuanlin.github.io还是可以用的，只不过域名的指向变了而已。谈谈部署在Coding的各种优缺点吧。 &nbsp; 为了这篇文章看起来不那么像软文，我先说一下缺点吧（当然没拿广告费） 缺点 仓库容量小，只有256 MB，可以通过升级套餐增加容量。（说贵不贵，说便宜也不便宜） 免费的套餐，绑定自己的域名时，会插入广告。 数据储存在国内，多少还是有点不放心 /逃 Coding的好处1. 加载速度快也因为服务器在国内，所以加载速度比GitHub快很多，至于自己搭服务器的话，如果只是一个博客，我感觉没必要。。。 2. 私有仓库Coding免费版套餐可以有5个私有的仓库，如果部署网站时不想让别人看到发布的源文件，确实挺好用的。 3. 自动加证书 如图↓不用再去申请SSL证书了~ 4. 广告可以”缩小面积”为什么这样说呢？且看官方的说明： 银牌会员的 Coding Pages 在访问时默认会先加载 Pages 跳转页，您可选择在网站首页任意位置放置「Hosted by Coding Pages」的文字版或图片版，然后勾选下方的「已放置 Hosted by Coding Pages」选项，通过审核后您的 Pages 将不会显示跳转页。请务必将「Hosted by Coding Pages」持续保留在网站首页，撤掉后跳转页会再次出现。 其中，银牌会员就是免费套餐，跳转页就是广告。如果你仔细观察，你可以在这个网站的最下端看到 这样就不会出现跳转页广告了。（升级套餐的话用不着这么麻烦，土豪请随意） 5. WebIDE适合总换设备的人 :) 可以直接在网页上修改、写作、部署，只是因为直接在网页上操作，所以显得不是那么流畅。 6. 更丰富的域名绑定选项 如果你有多个域名，不需要在域名服务商那儿设置各种跳转，用Coding的这个功能再容易不过了。 ps：发现我换了个新的域名吗？腾讯云年终降价，用很低的价格拍下的这个.com的域名 我现在有几个域名： radiastu.com radiationstu.cn 辐射.cn yxlin.xyz 其中，前三个都可以跳转至我的网站，最后一个嘛，做实验用的，能不能打开取决于你的运气 :) 总结说到底，还是要感谢Coding，提供了这么方便的服务，使得这篇文章能够稳定、快速地呈现在您的眼前 :) &nbsp;来一首Ragtime吧~ var options = {"narrow":false,"autoplay":false,"showlrc":0,"mode":"circulation","mutex":true,"theme":"#e6d0b2","preload":"auto","listmaxheight":"513px","music":[{"title":"The Easy Winners","author":"Scott Joplin","url":"http://ovp6a4f6u.bkt.clouddn.com/1-05%20The%20Easy%20Winners.mp3","pic":"http://upload-images.jianshu.io/upload_images/2218072-3bde9c7345a1e1fe.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"}]}; options.element = document.getElementById("aplayer0"); var ap = new APlayer(options); window.aplayers || (window.aplayers = []); window.aplayers.push(ap);]]></content>
      <categories>
        <category>科技</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 折腾记]]></title>
    <url>%2F2017%2F12%2F17%2FHexo%20%E6%8A%98%E8%85%BE%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[看到有些基于Hexo搭建的网站很漂亮，那是怎样深度定制的呢？持续更新~ &nbsp; 背景颜色效果看我的网站就是了实现方法 定义颜色变量：themes/next/source/css/_variables/custom.styl // 背景颜色$body-bg-color = #f5f5d5;$header-bg-color = #f5f5d5;$footer-bg-color = #f5f5d5; 修改文章底部标签样式带#的标签并不好看效果图实现方法修改模板/themes/next/layout/_macro/post.swig，搜索rel=&quot;tag&quot;&gt;#，将#换成&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt; 点击爆炸效果效果图 实现方法 首先在themes/next/source/js/src里面新建一个叫fireworks.js的文件，输入以下代码： "use strict";function updateCoords(e)&#123;pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;function setParticuleDirection(e)&#123;var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;function createParticule(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;function createCircle(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color="#F00",a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function()&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1&#125;,a&#125;function renderParticule(e)&#123;for(var t=0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;function animateParticules(e,t)&#123;for(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:function(e)&#123;return e.endPos.x&#125;,y:function(e)&#123;return e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:"easeOutExpo",update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:"linear",duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:"easeOutExpo",update:renderParticule,offset:0&#125;)&#125;function debounce(e,t)&#123;var a;return function()&#123;var n=this,i=arguments;clearTimeout(a),a=setTimeout(function()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl=document.querySelector(".fireworks");if(canvasEl)&#123;var ctx=canvasEl.getContext("2d"),numberOfParticules=30,pointerX=0,pointerY=0,tap="mousedown",colors=["#FF1461","#18FF92","#5A87FF","#FBF38C"],setCanvasSize=debounce(function()&#123;canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+"px",canvasEl.style.height=window.innerHeight+"px",canvasEl.getContext("2d").scale(2,2)&#125;,500),render=anime(&#123;duration:1/0,update:function()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,function(e)&#123;"sidebar"!==e.target.id&amp;&amp;"toggle-sidebar"!==e.target.id&amp;&amp;"A"!==e.target.nodeName&amp;&amp;"IMG"!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener("resize",setCanvasSize,!1)&#125;"use strict";function updateCoords(e)&#123;pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;function setParticuleDirection(e)&#123;var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;function createParticule(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;function createCircle(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color="#F00",a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function()&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1&#125;,a&#125;function renderParticule(e)&#123;for(var t=0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;function animateParticules(e,t)&#123;for(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:function(e)&#123;return e.endPos.x&#125;,y:function(e)&#123;return e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:"easeOutExpo",update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:"linear",duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:"easeOutExpo",update:renderParticule,offset:0&#125;)&#125;function debounce(e,t)&#123;var a;return function()&#123;var n=this,i=arguments;clearTimeout(a),a=setTimeout(function()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl=document.querySelector(".fireworks");if(canvasEl)&#123;var ctx=canvasEl.getContext("2d"),numberOfParticules=30,pointerX=0,pointerY=0,tap="mousedown",colors=["#FF1461","#18FF92","#5A87FF","#FBF38C"],setCanvasSize=debounce(function()&#123;canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+"px",canvasEl.style.height=window.innerHeight+"px",canvasEl.getContext("2d").scale(2,2)&#125;,500),render=anime(&#123;duration:1/0,update:function()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,function(e)&#123;"sidebar"!==e.target.id&amp;&amp;"toggle-sidebar"!==e.target.id&amp;&amp;"A"!==e.target.nodeName&amp;&amp;"IMG"!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener("resize",setCanvasSize,!1)&#125;; 打开themes/next/layout/_layout.swig,在&lt;/body&gt;上面写下如下代码： &#123;% if theme.fireworks %&#125; &lt;canvas class="fireworks" style="position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;" &gt;&lt;/canvas&gt; &lt;script type="text/javascript" src="//cdn.bootcss.com/animejs/2.2.0/anime.min.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="/js/src/fireworks.js"&gt;&lt;/script&gt;&#123;% endif %&#125; 打开主题配置文件，添加： # 烟花效果fireworks: true 底部加上访问量和字数统计效果图访问量——实现方法打开\themes\next\layout_partials\footer.swig文件,在copyright框前加上这句话：&lt;script async src="https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"&gt;&lt;/script&gt; 然后在随便一个位置添加显示统计的代码，如图：&lt;div class="powered-by"&gt;&lt;i class="fa fa-user-md"&gt;&lt;/i&gt;&lt;span id="busuanzi_container_site_uv"&gt; 本站访客数:&lt;span id="busuanzi_value_site_uv"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt; 在这里有两中不同计算方式的统计代码： pv的方式，单个用户连续点击n篇文章，记录n次访问量 uv的方式，单个用户连续点击n篇文章，只记录1次访客数 只需要修改这句话：&lt;span id="busuanzi_value_site_uv"&gt;&lt;/span&gt; 中的uv/pv即可 字数统计——实现方法切换到根目录下，然后运行如下代码：$ npm install hexo-wordcount --save 然后在/themes/next/layout/_partials/footer.swig文件尾部加上：&lt;div class="theme-info"&gt; &lt;div class="powered-by"&gt;&lt;/div&gt; &lt;span class="post-count"&gt;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;/span&gt;&lt;/div&gt; 改变文本选中颜色使用CSS3::selection伪元素改变文本选中颜色 设置动态title效果图效果图.gif 实现方法在 \themes\next\source\js\src 目录下新建 dytitle.js 。添加以下内容：&lt;!--崩溃欺骗--&gt;var OriginTitile = document.title; var titleTime; document.addEventListener('visibilitychange', function () &#123; if (document.hidden) &#123; $('[rel="icon"]').attr('href', "/img/TEP.ico"); document.title = ' 你好像掉线了'; clearTimeout(titleTime); &#125; else &#123; $('[rel="icon"]').attr('href', "/favicon.ico"); document.title = ' 嗯正常了~ ' + OriginTitile; titleTime = setTimeout(function () &#123; document.title = OriginTitile; &#125;, 2000); &#125; &#125;); 更改 \themes\next\layout\_layout.swig ，在 &lt;/body之前添加：&lt;!--卖萌--&gt;&lt;script type="text/javascript" src="/js/src/dytitle.js"&gt;&lt;/script&gt; 为博客加上萌萌的宠物效果图看右下角或者点击效果图.gifps:好像有些model不应该叫宠物。。。实现方法在你的博客的根目录里，输入如下代码：npm install -save hexo-helper-live2d 然后打开Hexo/blog/themes/next/layout下的_layout.swig,将下面代码放到末尾的之前：&#123;&#123; live2d() &#125;&#125; 然后在在hexo的_config.yml中添加参数：live2d: model: wanko bottom: -30 各种模型：https://github.com/EYHN/hexo-helper-live2d width 宽度 默认值: 150 height 高度 默认值： 300 className &lt;canvas&gt;元素的类名 默认值： live2d id &lt;canvas&gt; 元素的id 默认值： live2dcanvas bottom &lt;canvas&gt; 元素的底部偏移 默认值： -20 如果嫌模型位置不正确 可以调整这个参数 自定义鼠标样式实现方法在themes/next/source/css/_custom/custom.styl添加：// 鼠标样式 * &#123; cursor: url("http://om8u46rmb.bkt.clouddn.com/sword2.ico"),auto!important &#125; :active &#123; cursor: url("http://om8u46rmb.bkt.clouddn.com/sword1.ico"),auto!important &#125; 其中url里面必须是ico图片，可以直接把图片传到网上（七牛云或简书），获取外链就可以了。 &nbsp; 推荐博客Hexo小书 Vinson-sheep博客 拓展阅读Hexo小书关于 Hexo 的若干问题 结尾希望以上的教程能帮到你~]]></content>
      <categories>
        <category>科技</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 文章简单加密访问]]></title>
    <url>%2F2017%2F12%2F08%2FHexo%20%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86%2F</url>
    <content type="text"><![CDATA[即使是最简单的密码,也足以阻止90%的人 测试页面：工作台(随便点进去一个链接试试?) 起因 当 Hexo 有了文章加密的功能，我终于可以写一些私密的内容了 起初，我是用印象笔记来写一些东西的，只是如果要与别人分享的话，不是很方便。而这种做法，得到密码就可以打开某一篇文章了。 过程很简单的一个操作，打开主题文件夹/layout/_partials/head.swig在首句&lt;meta charset=&quot;UTF-8&quot;/&gt;后面插入以下代码： &lt;script&gt; (function()&#123; if('&#123;&#123; page.password &#125;&#125;')&#123; if (prompt('请输入文章密码') !== '&#123;&#123; page.password &#125;&#125;')&#123; alert('密码错误'); history.back(); &#125; &#125; &#125;)();&lt;/script&gt; 然后，在需要加密的文章里加进password: 你要设的密码像这样：---title: 文章标题layout: defaultpassword: 123456--- 这就完成了，效果和上面的图一样。 安全性 道高一尺，魔高一丈 毕竟是静态的网站，这种方式只能阻挡一般人。如果你有更好的方法，不妨在下面的评论里分享一下？]]></content>
      <categories>
        <category>科技</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[给 Hexo 加上评论(已弃用)]]></title>
    <url>%2F2017%2F12%2F07%2F%E7%BB%99%20Hexo%20%E6%B7%BB%E5%8A%A0%E7%95%99%E8%A8%80%E6%9D%BF%2F</url>
    <content type="text"><![CDATA[2018.1.17更新改用更加简洁的 Valine 2018.1.14更新：弃用 Gitment 的原因： 每写一篇文章都必须配置一下 每个页面都必须手动初始化 只能用 GitHub 账号登陆 现改用來比利参考：hexo从多说评论转为韩国来必力评论第三方评论系统推荐 原文：可以点开看看效果：测试页面多说停止服务了，网易云跟帖也挂了，disqus在墙内没法看到。于是，有人突发奇想，利用 GitHub 的 Issues 来搭建评论系统。项目的中文简介：文档GitHub 仓库：gitment示例页面：Gitment Demo Page中文介绍写得有些复杂，我给大家简化一下。 1. 注册 OAuth Application点击此处 注册一个 Application，按下图填写相关信息：点击绿色的按钮提交然后你会得到 client ID 和 client secret，之后会用到的 2. 把代码引入到你的页面eg. 我在 关于我 的页面添加评论，只需要把以下代码添加到文章的末尾：&lt;div id="container"&gt;&lt;/div&gt;&lt;link rel="stylesheet" href="https://imsun.github.io/gitment/style/default.css"&gt;&lt;script src="https://imsun.github.io/gitment/dist/gitment.browser.js"&gt;&lt;/script&gt;&lt;script&gt;var gitment = new Gitment(&#123; id: '页面 ID', // 可选。默认为 location.href owner: 'linyuxuanlin', //改你自己的名字 repo: 'Comments', //专门储存评论一个GitHub仓库 oauth: &#123; client_id: '45dc966马赛克b1950', //改为你自己的，下同 client_secret: '839马赛克647523eb马赛克c6ad1f598f5df', &#125;,&#125;)gitment.render('container')&lt;/script&gt; 3. 初始化评论把页面 发布 一下然后打开有放置评论的页面，用你的GitHub账号登陆，按提示点击 初始化 按钮这样评论系统就建立啦~ 更多自定义请见中文介绍 有兴趣可以加我微信: linyuxuanlin一起交流讨论hexo建站~]]></content>
      <categories>
        <category>科技</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一种简单的密码设置策略]]></title>
    <url>%2F2017%2F12%2F06%2F%E4%B8%80%E7%A7%8D%E5%AF%86%E7%A0%81%E8%AE%BE%E7%BD%AE%E7%AD%96%E7%95%A5%2F</url>
    <content type="text"><![CDATA[相信许多人为了方便，在不同网站上设置的都是同一个密码。但如果一个网站的密码泄露了，其他网站的密码就很容易被推测出来。而如果使用完全不同的密码，虽然安全了，却记不住那么多密码？ 正文介绍一种自己用的密码策略： 通过选取注册的网站或App的英文名或拼音，然后从T9键盘上取相应数字，组成一个密码。 eg. 微信: weixin ——&gt; 934946 如果嫌太简单，也可以加上一些通用的密码片段。 这样的话，每个网站密码都不一样，又方便记忆；一个网站密码丢失后，不至于其他网站账号被盗，也不太需要去修改其他网站的密码。 以上只是说明一种方法，你可以修改自己的算法，只有你自己才能推算出密码。 拓展阅读偶然看到一篇文章，很多人对密码持有这样的观点： 至于密码，泄露了就泄露了呗，反正我又不是什么名人，他们拿了我的信息也没有用的。 我的观点：你的用户信息在你看来一文不值，但是在某些人眼里，可能可以卖个好价钱。然后，嗯，就是你的某些利益被侵害之时了。 推荐文章：为什么我用胶布贴住了所有电子产品的摄像头和麦克风？]]></content>
      <categories>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MacOS 配置 Hexo 一键更新]]></title>
    <url>%2F2017%2F12%2F05%2F%E9%85%8D%E7%BD%AE%20hexo%20%E4%B8%80%E9%94%AE%E6%9B%B4%E6%96%B0%E6%B5%81%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[众所周知，在Pages上写文章，写完之了后，需要在git命令行先生成，再部署。缩减版的指令是这样的：hexo ghexo d 再缩减，成了这样： hexo d -g 可是我们还想偷懒！有没有更简单的方法呢？ MacOS下有个神一般的应用，叫Automator，最近很流行的workflow就是由这个来的。 它能然你自定义工作流程，以完成一些重复而无脑的操作。 本文以一键更新Hexo为例，简略介绍一下Automator的用法。 一键更新Hexo打开终端类因为我用的是iTerm，所以下图直接打开它，如果是别的终端就选那个 控制键盘输入hexo d -g找到执行AppleScript，把以下代码复制进框里：on run &#123;input, parameters&#125;true--trueset timeoutSeconds to 0trueset uiScript to "keystroke \"hexo d -g\" " --Mark，注意这行代码truemy doWithTimeout(uiScript, timeoutSeconds) return inputend runon doWithTimeout(uiScript, timeoutSeconds)trueset endDate to (current date) + timeoutSecondstruerepeattruetruetrytruetruetruerun script "tell application \"System Events\"" &amp; uiScript &amp; "end tell"truetruetrueexit repeattruetrueon error errorMessagetruetruetrueif ((current date) &gt; endDate) thentruetruetruetrueerror "Can not " &amp; uiScripttruetruetrueend iftruetrueend trytrueend repeatend doWithTimeout 完成！先打开终端，输入cd 博客位置(这一操作不自动，因为只需要重复一次)。单击运行按钮或者cmd+R，自动生成&amp;部署成功！ 拓展并不只有这个玩法，你也可以加一句hexo s进去试试，或者尝试别的玩法。只有你想不到，没有Automator做不到的~]]></content>
      <categories>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>技巧</tag>
        <tag>MacOS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用 Pages 搭建单页面网站]]></title>
    <url>%2F2017%2F12%2F05%2FPages%20%E5%8D%95%E9%A1%B5%E9%9D%A2%2F</url>
    <content type="text"><![CDATA[本教程介绍了一种搭建简易网站的方法。由jekyll强力驱动，托管于GitHub Pages。可以用作简历、项目文档、about me，等等，只要你想得到。预览：单页面测试 GitHub Pages的优势： 简易，5分钟即可搭建完成。 可以不需要买域名和服务器。 GitHub Pages不用担心访问流量和带宽。 丰富的主题选择和 自定义 。 那我们开始吧~ 1.GitHub仓库的建立和设置首先，建立一个新的GitHub仓库： (原有仓库的任何文档都可以变成jekyll页面，所以说可以愉快地编写项目文档) 建好的仓库如下图： 点击Settings，移动到下方，开启Pages服务： 进入主题选择的界面。我选了一个看起来挺漂亮的modernist主题，然后点击select： 之后返回settings，发现网站已经生成了： 网址默认是https://github用户名.github.io/仓库名字(也是网站的名字)(因为我有自己的域名，所以直接生成一个二级域名。) 点击访问： 2.编辑网站你会发现，刚刚生成的网站的内容是这个仓库的README文档。所以，最简单的，直接修改README的内容就可以了。 回到仓库的页面，点击README.md 点击铅笔的图标进行修改： 保存后隔一两分钟，再访问你的网站： 成功！3.拓展 其实，不只是能单页面，你也可以在主页面里创建一个新的页面，实现多页面。 或者，你看着这些文字很讨厌： 想重新定制一下，变成这样？ 请听下回分解~]]></content>
      <categories>
        <category>科技</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>GitHub Pages</tag>
        <tag>Jekyll</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Wight-基于云平台的去线缆化照明系统]]></title>
    <url>%2F2017%2F07%2F17%2FWight%2F</url>
    <content type="text"><![CDATA[这是在hack.init()中做出来的撸代码、3D建模、调试各种乱七八糟的bug、等待打印、展示&amp;演讲，花了20多个小时欲了解更多，请展开下文~ 简介简单介绍一下，这个项目主要是用于乡村偏远地区的路灯照明系统模型有点抽象，有人说它像火箭，但其实它是一杆路灯。。。 项目的创新点： 太阳能供电。自给自足（经查阅详细资料，太阳能发电量足以点亮LED） 去线缆化。为偏远山区不方便铺线缆提供便利 智能算法。检测到夜晚，自动开灯；检测到人或车辆经过，提高LED亮度 云平台统一控制。用的是GSM主控，可以批量远程调试 拓展性。对个别有自定义照明需求的特殊用户提供各种自定义的功能 代码基于intorobot的云平台，已开源：代码 #define BUTTONS_address "channel/widget4_0/cmd/control" //开关命令#define LIGHT_STATUS_address "channel/widget4_0/data/light"//开关状态#define ITENSITY_DATA_address "channel/widget4_0/data/lightsensor"#define LEDPIN1 D1 //定义灯泡控制引脚#define LEDPIN2 D2#define LEDPIN3 D3#define LEDPIN4 D5#define CHECKIN1 A0#define CHECKIN2 D4int autostate = 2;int light_state = 2;void buttons_function(uint8_t *payload, uint32_t len)//自动&amp;浇水按钮&#123;trueuint8_t SwitchKey;trueuint8_t SwitchKey2;trueaJsonClass aJson;trueaJsonObject *root = aJson.parse((char *)payload);trueif(root == NULL)true&#123;truetrueaJson.deleteItem(root);truetruereturn;true&#125;trueaJsonObject *_switch = aJson.getObjectItem(root, "mode");trueif(_switch != NULL)true&#123;truetrueSwitchKey = atoi(_switch-&gt;valuestring);truetrueif(SwitchKey)truetrue&#123;truetruetrueSerialUSB.println("auto on");truetruetrueautostate=1;truetruetrue IntoRobot.publish(LIGHT_STATUS_address,"1");truetrue&#125;truetrueelsetruetrue&#123;truetruetrueSerialUSB.println("auto off");truetruetrueautostate=0;truetruetrue IntoRobot.publish(LIGHT_STATUS_address,"0");truetrue&#125;true&#125;trueaJsonObject *_switch2 = aJson.getObjectItem(root, "manual");trueif(_switch2 != NULL)true&#123;truetrueSwitchKey2 = atoi(_switch2-&gt;valuestring);truetrueif(SwitchKey2)truetrue&#123;truetruetrueSerialUSB.println("manual on");truetruetruelight_state=1;truetruetrue IntoRobot.publish(LIGHT_STATUS_address,"1");truetrue&#125;truetrueelsetruetrue&#123;truetruetrueSerialUSB.println("manual off");truetruetruelight_state=0;truetruetrue IntoRobot.publish(LIGHT_STATUS_address,"0");truetrue&#125;true&#125;trueelsetrue&#123;true&#125;trueaJson.deleteItem(root);&#125;void lightup()&#123;truedigitalWrite(LEDPIN1, HIGH); // 打开灯泡truedigitalWrite(LEDPIN2, HIGH); // 打开灯泡truedigitalWrite(LEDPIN3, HIGH); // 打开灯泡truedigitalWrite(LEDPIN4, HIGH); // 打开灯泡&#125;void light_half_up()&#123;trueanalogWrite(LEDPIN1, 80); // 打开灯泡trueanalogWrite(LEDPIN2, 80); // 打开灯泡trueanalogWrite(LEDPIN3, 80); // 打开灯泡trueanalogWrite(LEDPIN4, 80); // 打开灯泡&#125;void lightdown()&#123;truedigitalWrite(LEDPIN1, LOW);truedigitalWrite(LEDPIN2, LOW);truedigitalWrite(LEDPIN3, LOW);truedigitalWrite(LEDPIN4, LOW);&#125;int getlight()&#123;trueint k = analogRead(CHECKIN1);trueSerialUSB.println(k);truereturn k;&#125;int get_IR_data()&#123;trueint b = digitalRead(CHECKIN2);trueSerialUSB.println(b);truereturn b;&#125;void automode()&#123;trueif(getlight()&gt;=400)true&#123;true IntoRobot.publish(LIGHT_STATUS_address,"1");truetrueif (get_IR_data()==0)truetruelightup();truetrueelsetruetruelight_half_up();true&#125;trueelsetrue&#123;trueIntoRobot.publish(LIGHT_STATUS_address,"0");truelightdown();true&#125;&#125;void HUMIDITY_print_function(uint8_t *payload, uint32_t len)&#123;&#125;// IntoRobot.publish(LIGHT_STATUS_address,"1");// IntoRobot.publish(LIGHT_STATUS_address,"0");void setup()&#123; pinMode(D4,INPUT);trueSerialUSB.begin(115200);trueSerialUSB.println("hello world");truepinMode(LEDPIN1, OUTPUT); //初始化truepinMode(LEDPIN2, OUTPUT); //初始化truepinMode(LEDPIN3, OUTPUT); //初始化truepinMode(LEDPIN4, OUTPUT); //初始化true//设备接收云平台的灯开关命令trueIntoRobot.subscribe(BUTTONS_address,NULL,buttons_function);trueIntoRobot.subscribe(ITENSITY_DATA_address,NULL,HUMIDITY_print_function);&#125;void loop()&#123; int a =map(getlight() ,0,1024,100,0); IntoRobot.publish(LIGHT,a); SerialUSB.println(getlight());trueif(autostate==0)true&#123;truetrueif(light_state ==1)truetruelightup();truetrueelsetruetruelightdown(); true&#125;trueelse if (autostate==1)true&#123;truetrueSerialUSB.println("state=1");truetrueautomode();true&#125;truedelay(100);&#125; 模型用的是123D建模。tips：熟悉快捷键的话，建模速度会很快~因为现场时间不够，随便画了一个总的模型分底座，顶部和中间的部分然后打印出来模型下载]]></content>
      <categories>
        <category>科技</category>
      </categories>
      <tags>
        <tag>Arduino</tag>
        <tag>C++</tag>
        <tag>教程</tag>
        <tag>3D打印</tag>
        <tag>作品</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[名片设计]]></title>
    <url>%2F2017%2F07%2F17%2F%E5%90%8D%E7%89%87%E8%AE%BE%E8%AE%A1%2F</url>
    <content type="text"><![CDATA[仅仅只是一次尝试~ 效果图： 不足之处还是有很多： 信息量太少 背面样式太过简介 微信的二维码未加以说明 人物身份介绍有点low 也是印了几百张，改动积累多一点再重新设计吧~]]></content>
      <categories>
        <category>设计</category>
      </categories>
      <tags>
        <tag>设计</tag>
        <tag>作品</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[3D打印U盘-文件开源]]></title>
    <url>%2F2017%2F07%2F02%2F3D%E6%89%93%E5%8D%B0U%E7%9B%98%2F</url>
    <content type="text"><![CDATA[不久前的作品，所有设计文件放在GitHub仓库。当然，如果你没有3D打印机的话，也可以跟我买，我会帮你设计&amp;打印 :D 当然，U盘的芯片不可能是打印的 先准备一些U盘芯片，打印机工作一半的时候暂停，把U盘芯放进去，再接着打印~ 如果想要跟我买的话，我就按贴近成本价出售吧。 容量 价格 16GB ￥34.9 打印成品效果： 封装 加我微信: linyuxuanlin]]></content>
      <categories>
        <category>设计</category>
      </categories>
      <tags>
        <tag>设计</tag>
        <tag>3D打印</tag>
        <tag>作品</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[班服的设计]]></title>
    <url>%2F2017%2F06%2F30%2F%E7%8F%AD%E6%9C%8D%E7%9A%84%E8%AE%BE%E8%AE%A1%2F</url>
    <content type="text"><![CDATA[↑效果图↑详细文件见GitHub仓库：https://github.com/linyuxuanlin/T-shirt-of-class 附：排球比赛后 突出的元素：5班 手 HI!5 鲜艳的Google配色至于背面。。。那就不是我决定的了。想看的话自己点那个链接去看吧。]]></content>
      <categories>
        <category>设计</category>
      </categories>
      <tags>
        <tag>设计</tag>
        <tag>作品</tag>
        <tag>Illustrator</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[T-Clock]]></title>
    <url>%2F2017%2F06%2F25%2FT-Clock%2F</url>
    <content type="text"><![CDATA[简介一直想给自己来一个桌上的小时钟，今天就来做一个吧~ 硬件 Arduino pro mini（主要是因为体积小，其他的型号也兼容） OLED屏（内部驱动芯片：SSD1306） SPI接口（如果是IIC或者是其他屏幕的也可以，修改程序第12行） RTC时钟模块（ds1307）（可加DS18B20测温） 锂电池 锂电池充电模块 开关 接线见代码，RTC模块按IIC协议接 代码/*name:T-ClockDescription: a tiny clock IDE version: 1.8.2Author: Lin &lt;linyuxuanlin.github.io&gt;Date: 2016-10-3*/#include &lt;U8glib.h&gt;#include &lt;SPI.h&gt;#include &lt;Wire.h&gt;#include &lt;RTClib.h&gt;U8GLIB_SSD1306_128X64 u8g(10, 9, 12, 11, 13);//这里适用的OLED屏的引脚是：D0,D1,RST,DC/*接线： OLED-Arduino D0-D10 D1-D9 RST-D13 DC-D11*/RTC_DS1307 RTC;//RTC按照IIC接线char monthString[37] =&#123; "JanFebMarAprMayJunJulAugSepOctNovDec"&#125;;int monthIndex[122] =&#123; 0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33&#125;;String thisMonth = "";String thisTime = "";String thisDay = "";//用于定义表盘的中心int clockCentreX = 64;int clockCentreY = 32;void draw(void)&#123; u8g.setFont(u8g_font_profont15); DateTime now = RTC.now(); //在底部显示日期 thisDay = String(now.day(), DEC) + "/"; thisMonth = ""; for (int i = 0; i &lt;= 2; i++) &#123; thisMonth += monthString[monthIndex[now.month() - 1] + i]; &#125; thisDay = thisDay + thisMonth + "/"; thisDay = thisDay + String(now.year() , DEC); const char* newDay = (const char*) thisDay.c_str(); u8g.drawStr(32, 63, newDay); thisTime = ""; thisTime = String(now.hour()) + ":"; if (now.minute() &lt; 10) &#123; thisTime = thisTime + "0"; // 在单数数字前头加个0 &#125; //数字时间 thisTime = thisTime + String(now.minute()) ; const char* newTime = (const char*) thisTime.c_str(); u8g.drawStr(10, 10, newTime); //画时钟盘面 u8g.drawCircle(clockCentreX, clockCentreY, 20); // 外面的大圆 u8g.drawCircle(clockCentreX, clockCentreY, 2); // 里面的小圆 //跳动显示 for ( int z = 0; z &lt; 360; z = z + 30 ) &#123; //始于0°,止于360° float angle = z ; angle = (angle / 57.29577951) ; //化度数为弧度 int x2 = (clockCentreX + (sin(angle) * 20)); int y2 = (clockCentreY - (cos(angle) * 20)); int x3 = (clockCentreX + (sin(angle) * (20 - 5))); int y3 = (clockCentreY - (cos(angle) * (20 - 5))); u8g.drawLine(x2, y2, x3, y3); &#125; // 秒针 float angle = now.second() * 6 ; angle = (angle / 57.29577951) ; //化度数为弧度 int x3 = (clockCentreX + (sin(angle) * (20))); int y3 = (clockCentreY - (cos(angle) * (20))); u8g.drawLine(clockCentreX, clockCentreY, x3, y3); // 分针 angle = now.minute() * 6 ; angle = (angle / 57.29577951) ; //化度数为弧度 x3 = (clockCentreX + (sin(angle) * (20 - 3))); y3 = (clockCentreY - (cos(angle) * (20 - 3))); u8g.drawLine(clockCentreX, clockCentreY, x3, y3); // 时针 angle = now.hour() * 30 + int((now.minute() / 12) * 6 ) ; angle = (angle / 57.29577951) ; //化度数为弧度 x3 = (clockCentreX + (sin(angle) * (20 - 11))); y3 = (clockCentreY - (cos(angle) * (20 - 11))); u8g.drawLine(clockCentreX, clockCentreY, x3, y3); //显示自己的定制字符 u8g.setPrintPos(100, 10); u8g.print("Lin");&#125;void setup(void)&#123; Serial.begin(9600); analogReference(EXTERNAL); Wire.begin(); RTC.begin(); if (! RTC.isrunning()) &#123; Serial.println("RTC is NOT running!"); RTC.adjust(DateTime(__DATE__, __TIME__)); &#125;&#125;void loop(void)&#123; u8g.firstPage(); do &#123; draw(); &#125; while ( u8g.nextPage() ); delay(10);&#125; 外壳本来是想3D打印一个的，无奈焊接后时间不准，没法调了：) 资料下载所有文件：https://github.com/linyuxuanlin/My-Arduino-projects/tree/master/T-Clock注：我提供的文件里已经包括下列库，这些仅供参考 RTClib库GitHub ：https://github.com/adafruit/RTClibU8glib库GitHub ： https://github.com/olikraus/u8glib备用：https://bintray.com/olikraus/u8glib 参考屏幕显示不了？先来测试一下~OLED-SPI试验用Arudino Uno给pro mini烧程序：http://blog.sina.com.cn/s/blog_53f8d23d0102wv3m.htmlU8glib用法：https://github.com/olikraus/u8glib/wiki/device#ssd1306-128x64GitHub源，英文http://www.geek-workshop.com/thread-10634-1-1.html极客工坊，中文，比较推荐OLED屏参考：引脚信息：D0：CLK时钟D1：MOSI数据RST：复位DC：数据/命令兼容3.3V和5V 写在最后这个项目花了一天的时间，我尽量让这这篇文章看起来详细和容易理解。 （不介意给这个项目一个star？）]]></content>
      <categories>
        <category>科技</category>
      </categories>
      <tags>
        <tag>Arduino</tag>
        <tag>C++</tag>
        <tag>教程</tag>
        <tag>3D打印</tag>
        <tag>作品</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[怎样优雅地复制百度文库]]></title>
    <url>%2F2016%2F12%2F11%2F%E6%80%8E%E6%A0%B7%E4%BC%98%E9%9B%85%E5%9C%B0%E5%A4%8D%E5%88%B6%E7%99%BE%E5%BA%A6%E6%96%87%E5%BA%93%2F</url>
    <content type="text"><![CDATA[怎样做到不用下载券也可复制百度文库的内容？ 例如，这篇文章： 想摘抄下来，但是又没法复制全篇，直接下载又需要下载券 方法一：在某篇文章的地址前加上wap，进入了wap版的文库，就可以随心所欲地复制了 效果图： 方法二：记住文章的名字，在度娘直接搜索： 点击百度快照 完成！]]></content>
      <categories>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[写个小游戏]]></title>
    <url>%2F2016%2F11%2F06%2F%E5%86%99%E4%B8%AA%E5%B0%8F%E6%B8%B8%E6%88%8F%2F</url>
    <content type="text"><![CDATA[前几天在一外网上看到这个项目，用LCD1602液晶屏造个游戏机。 功能：按钮控制小人跳跃，避开方块准备： LCD1602液晶屏 按钮 Arduino 程序：#include &lt;LiquidCrystal.h&gt;#define PIN_BUTTON 2#define PIN_AUTOPLAY 1#define PIN_READWRITE 10#define PIN_CONTRAST 12#define SPRITE_RUN1 1#define SPRITE_RUN2 2#define SPRITE_JUMP 3#define SPRITE_JUMP_UPPER '.' // Use the '.' character for the head#define SPRITE_JUMP_LOWER 4#define SPRITE_TERRAIN_EMPTY ' ' // User the ' ' character#define SPRITE_TERRAIN_SOLID 5#define SPRITE_TERRAIN_SOLID_RIGHT 6#define SPRITE_TERRAIN_SOLID_LEFT 7#define HERO_HORIZONTAL_POSITION 1 // Horizontal position of hero on screen#define TERRAIN_WIDTH 16#define TERRAIN_EMPTY 0#define TERRAIN_LOWER_BLOCK 1#define TERRAIN_UPPER_BLOCK 2#define HERO_POSITION_OFF 0 // Hero is invisible#define HERO_POSITION_RUN_LOWER_1 1 // Hero is running on lower row (pose 1)#define HERO_POSITION_RUN_LOWER_2 2 // (pose 2)#define HERO_POSITION_JUMP_1 3 // Starting a jump#define HERO_POSITION_JUMP_2 4 // Half-way up#define HERO_POSITION_JUMP_3 5 // Jump is on upper row#define HERO_POSITION_JUMP_4 6 // Jump is on upper row#define HERO_POSITION_JUMP_5 7 // Jump is on upper row#define HERO_POSITION_JUMP_6 8 // Jump is on upper row#define HERO_POSITION_JUMP_7 9 // Half-way down#define HERO_POSITION_JUMP_8 10 // About to land#define HERO_POSITION_RUN_UPPER_1 11 // Hero is running on upper row (pose 1)#define HERO_POSITION_RUN_UPPER_2 12 // (pose 2)LiquidCrystal lcd(11, 9, 6, 5, 4, 3);static char terrainUpper[TERRAIN_WIDTH + 1];static char terrainLower[TERRAIN_WIDTH + 1];static bool buttonPushed = false;void initializeGraphics()&#123; static byte graphics[] = &#123; // Run position 1 B01100, B01100, B00000, B01110, B11100, B01100, B11010, B10011, // Run position 2 B01100, B01100, B00000, B01100, B01100, B01100, B01100, B01110, // Jump B01100, B01100, B00000, B11110, B01101, B11111, B10000, B00000, // Jump lower B11110, B01101, B11111, B10000, B00000, B00000, B00000, B00000, // Ground B11111, B11111, B11111, B11111, B11111, B11111, B11111, B11111, // Ground right B00011, B00011, B00011, B00011, B00011, B00011, B00011, B00011, // Ground left B11000, B11000, B11000, B11000, B11000, B11000, B11000, B11000, &#125;; int i; // Skip using character 0, this allows lcd.print() to be used to // quickly draw multiple characters for (i = 0; i &lt; 7; ++i) &#123; lcd.createChar(i + 1, &amp;graphics[i * 8]); &#125; for (i = 0; i &lt; TERRAIN_WIDTH; ++i) &#123; terrainUpper[i] = SPRITE_TERRAIN_EMPTY; terrainLower[i] = SPRITE_TERRAIN_EMPTY; &#125;&#125;// Slide the terrain to the left in half-character increments//void advanceTerrain(char* terrain, byte newTerrain)&#123; for (int i = 0; i &lt; TERRAIN_WIDTH; ++i) &#123; char current = terrain[i]; char next = (i == TERRAIN_WIDTH-1) ? newTerrain : terrain[i+1]; switch (current)&#123; case SPRITE_TERRAIN_EMPTY: terrain[i] = (next == SPRITE_TERRAIN_SOLID) ? SPRITE_TERRAIN_SOLID_RIGHT : SPRITE_TERRAIN_EMPTY; break; case SPRITE_TERRAIN_SOLID: terrain[i] = (next == SPRITE_TERRAIN_EMPTY) ? SPRITE_TERRAIN_SOLID_LEFT : SPRITE_TERRAIN_SOLID; break; case SPRITE_TERRAIN_SOLID_RIGHT: terrain[i] = SPRITE_TERRAIN_SOLID; break; case SPRITE_TERRAIN_SOLID_LEFT: terrain[i] = SPRITE_TERRAIN_EMPTY; break; &#125; &#125;&#125;bool drawHero(byte position, char* terrainUpper, char* terrainLower, unsigned int score) &#123; bool collide = false; char upperSave = terrainUpper[HERO_HORIZONTAL_POSITION]; char lowerSave = terrainLower[HERO_HORIZONTAL_POSITION]; byte upper, lower; switch (position) &#123; case HERO_POSITION_OFF: upper = lower = SPRITE_TERRAIN_EMPTY; break; case HERO_POSITION_RUN_LOWER_1: upper = SPRITE_TERRAIN_EMPTY; lower = SPRITE_RUN1; break; case HERO_POSITION_RUN_LOWER_2: upper = SPRITE_TERRAIN_EMPTY; lower = SPRITE_RUN2; break; case HERO_POSITION_JUMP_1: case HERO_POSITION_JUMP_8: upper = SPRITE_TERRAIN_EMPTY; lower = SPRITE_JUMP; break; case HERO_POSITION_JUMP_2: case HERO_POSITION_JUMP_7: upper = SPRITE_JUMP_UPPER; lower = SPRITE_JUMP_LOWER; break; case HERO_POSITION_JUMP_3: case HERO_POSITION_JUMP_4: case HERO_POSITION_JUMP_5: case HERO_POSITION_JUMP_6: upper = SPRITE_JUMP; lower = SPRITE_TERRAIN_EMPTY; break; case HERO_POSITION_RUN_UPPER_1: upper = SPRITE_RUN1; lower = SPRITE_TERRAIN_EMPTY; break; case HERO_POSITION_RUN_UPPER_2: upper = SPRITE_RUN2; lower = SPRITE_TERRAIN_EMPTY; break; &#125; if (upper != ' ') &#123; terrainUpper[HERO_HORIZONTAL_POSITION] = upper; collide = (upperSave == SPRITE_TERRAIN_EMPTY) ? false : true; &#125; if (lower != ' ') &#123; terrainLower[HERO_HORIZONTAL_POSITION] = lower; collide |= (lowerSave == SPRITE_TERRAIN_EMPTY) ? false : true; &#125; byte digits = (score &gt; 9999) ? 5 : (score &gt; 999) ? 4 : (score &gt; 99) ? 3 : (score &gt; 9) ? 2 : 1; // Draw the scene terrainUpper[TERRAIN_WIDTH] = '\0'; terrainLower[TERRAIN_WIDTH] = '\0'; char temp = terrainUpper[16-digits]; terrainUpper[16-digits] = '\0'; lcd.setCursor(0,0); lcd.print(terrainUpper); terrainUpper[16-digits] = temp; lcd.setCursor(0,1); lcd.print(terrainLower); lcd.setCursor(16 - digits,0); lcd.print(score); terrainUpper[HERO_HORIZONTAL_POSITION] = upperSave; terrainLower[HERO_HORIZONTAL_POSITION] = lowerSave; return collide;&#125;// Handle the button push as an interruptvoid buttonPush() &#123; buttonPushed = true;&#125;void setup()&#123; pinMode(PIN_READWRITE, OUTPUT); digitalWrite(PIN_READWRITE, LOW); pinMode(PIN_CONTRAST, OUTPUT); digitalWrite(PIN_CONTRAST, LOW); pinMode(PIN_BUTTON, INPUT); digitalWrite(PIN_BUTTON, HIGH); pinMode(PIN_AUTOPLAY, OUTPUT); digitalWrite(PIN_AUTOPLAY, HIGH); // Digital pin 2 maps to interrupt 0 attachInterrupt(0/*PIN_BUTTON*/, buttonPush, FALLING); initializeGraphics(); lcd.begin(16, 2);&#125;void loop()&#123; static byte heroPos = HERO_POSITION_RUN_LOWER_1; static byte newTerrainType = TERRAIN_EMPTY; static byte newTerrainDuration = 1; static bool playing = false; static bool blink = false; static unsigned int distance = 0; if (!playing) &#123; drawHero((blink) ? HERO_POSITION_OFF : heroPos, terrainUpper, terrainLower, distance &gt;&gt; 3); if (blink) &#123; lcd.setCursor(0,0); lcd.print("Press Start"); &#125; delay(250); blink = !blink; if (buttonPushed) &#123; initializeGraphics(); heroPos = HERO_POSITION_RUN_LOWER_1; playing = true; buttonPushed = false; distance = 0; &#125; return; &#125; // Shift the terrain to the left advanceTerrain(terrainLower, newTerrainType == TERRAIN_LOWER_BLOCK ? SPRITE_TERRAIN_SOLID : SPRITE_TERRAIN_EMPTY); advanceTerrain(terrainUpper, newTerrainType == TERRAIN_UPPER_BLOCK ? SPRITE_TERRAIN_SOLID : SPRITE_TERRAIN_EMPTY); // Make new terrain to enter on the right if (--newTerrainDuration == 0) &#123; if (newTerrainType == TERRAIN_EMPTY) &#123; newTerrainType = (random(3) == 0) ? TERRAIN_UPPER_BLOCK : TERRAIN_LOWER_BLOCK; newTerrainDuration = 2 + random(10); &#125; else &#123; newTerrainType = TERRAIN_EMPTY; newTerrainDuration = 10 + random(10); &#125; &#125; if (buttonPushed) &#123; if (heroPos &lt;= HERO_POSITION_RUN_LOWER_2) heroPos = HERO_POSITION_JUMP_1; buttonPushed = false; &#125; if (drawHero(heroPos, terrainUpper, terrainLower, distance &gt;&gt; 3)) &#123; playing = false; // The hero collided with something. Too bad. &#125; else &#123; if (heroPos == HERO_POSITION_RUN_LOWER_2 || heroPos == HERO_POSITION_JUMP_8) &#123; heroPos = HERO_POSITION_RUN_LOWER_1; &#125; else if ((heroPos &gt;= HERO_POSITION_JUMP_3 &amp;&amp; heroPos &lt;= HERO_POSITION_JUMP_5) &amp;&amp; terrainLower[HERO_HORIZONTAL_POSITION] != SPRITE_TERRAIN_EMPTY) &#123; heroPos = HERO_POSITION_RUN_UPPER_1; &#125; else if (heroPos &gt;= HERO_POSITION_RUN_UPPER_1 &amp;&amp; terrainLower[HERO_HORIZONTAL_POSITION] == SPRITE_TERRAIN_EMPTY) &#123; heroPos = HERO_POSITION_JUMP_5; &#125; else if (heroPos == HERO_POSITION_RUN_UPPER_2) &#123; heroPos = HERO_POSITION_RUN_UPPER_1; &#125; else &#123; ++heroPos; &#125; ++distance; digitalWrite(PIN_AUTOPLAY, terrainLower[HERO_HORIZONTAL_POSITION + 2] == SPRITE_TERRAIN_EMPTY ? HIGH : LOW); &#125; delay(100);&#125; 接线 LCD1602 Arduino DB7 D3 DB6 D4 DB5 D5 DB4 D6 E D9 R/W D10 RS D11 V0 D12 原网址：这儿 （可能需要开VPN）]]></content>
      <categories>
        <category>科技</category>
      </categories>
      <tags>
        <tag>Arduino</tag>
        <tag>C++</tag>
        <tag>教程</tag>
        <tag>作品</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Arduino教程汇总]]></title>
    <url>%2F2016%2F10%2F02%2FArduino%20%E4%BC%A0%E6%84%9F%E5%99%A8%E6%95%99%E7%A8%8B%E6%B1%87%E6%80%BB%2F</url>
    <content type="text"><![CDATA[缓更 什么是Arduino?可以把Arduino主控板看做一个微缩版电脑，编写程序，交给Arduino帮你执行。若你想造一只机器人，Arudino作为控制中枢，从各传感器接收数据，处理并交给其它传感器执行，这样，机器人就能动了。 Arduino的优势Arduino在全世界创客圈的影响范围很大，有数不胜数的开源社区、论坛。对比51单片机，Arduino极易入门，而且能适应快速开发。对于我们学生，随时能造出一些黑科技，服务于我们的生活。 各类传感器的参考输入类按钮 1. 简介:输入设备，按下时输出低电平，反之 2. 接线:3. 程序: //name: Button example//Description: 按扭的例程//IDE version: 1.6//Author: Lin &lt;linyuxuanlin.github.io&gt;//Date: 2016-10-3//note: 按下按钮，LED亮；松开，LED灭int Button = 2;int LEDpin = 13;void setup() &#123; pinMode(Button, INPUT_PULLUP); //上拉使之默认接高电平,省去电阻 pinMode(LEDpin, OUTPUT); //设置13号IO口为输出状态&#125;void loop() &#123; int ButtonState = digitalRead(Button); //设置变量存储状态值 if(ButtonState==0) &#123; digitalWrite(LEDpin,HIGH); //如果读到的状态为0，说明按键已经按下，点亮LED &#125; else &#123; digitalWrite(LEDpin,LOW); // 反之，熄灭LED &#125; &#125; 超声波传感器 1. 简介:检测距离2. 接线: 3. 程序:为了最大程度简化程序，这里我们可以用到这个库文件SR04库/*name: HC-SR04 exampleDescription: 超声波测距,输出至串口IDE version: 1.6Author: Lin &lt;linyuxuanlin.github.io&gt;Date: 2016-10-5note: TRIG - 2 ECHO - 3*/#include "SR04.h"SR04 sr04 = SR04(3,2);void setup() &#123; Serial.begin(9600); //串口启动 Serial.println("Hi there!"); delay(1000);&#125;void loop() &#123; int a=sr04.Distance(); //把读到的数据赋值给a Serial.print(a); //输出 Serial.println("cm"); delay(500);&#125; 旋转编码器 1. 简介: 旋转，输出不同数值 2. 接线:3. 程序://name: RotaryEncoder example//Description: 旋转编码器例程//IDE version: 1.6//Author: Lin &lt;linyuxuanlin.github.io&gt;//Date: 2016-10-2//note: 顺时针旋转数值变大；逆时针变小；按钮按下时显示#define ENCODER_A_PIN 2#define ENCODER_B_PIN 3#define SWITCH_PIN 4long position;void setup()&#123; //初始化 pinMode(ENCODER_A_PIN, INPUT); pinMode(ENCODER_B_PIN, INPUT); pinMode(SWITCH_PIN, INPUT); //硬件中断 attachInterrupt(0, read_quadrature, CHANGE); //初始化串口 Serial.begin(9600);&#125;void loop()&#123; if (digitalRead(SWITCH_PIN) == LOW)&#123; delay(10); if (digitalRead(SWITCH_PIN) == LOW)&#123; Serial.println("Switch Pressed"); &#125; &#125; Serial.print("Position: "); Serial.println(position, DEC); delay(500);&#125;void read_quadrature()&#123; // ENA脚下降沿中断触发 if (digitalRead(ENCODER_A_PIN) == LOW)&#123; //查询ENB的电平以确认是顺时针还是逆时针旋转 if (digitalRead(ENCODER_B_PIN) == LOW) position++; &#125; // ENA脚上升沿中断触发 else&#123; //查询ENB的电平以确认是顺时针还是逆时针旋转 if (digitalRead(ENCODER_B_PIN) == LOW) position--; &#125;&#125; 未完，有时间继续填坑]]></content>
      <categories>
        <category>科技</category>
      </categories>
      <tags>
        <tag>Arduino</tag>
        <tag>C++</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[没有成本的世界不一定美好]]></title>
    <url>%2F2016%2F10%2F01%2F%E6%B2%A1%E6%9C%89%E6%88%90%E6%9C%AC%E7%9A%84%E4%B8%96%E7%95%8C%E4%B8%8D%E4%B8%80%E5%AE%9A%E7%BE%8E%E5%A5%BD%2F</url>
    <content type="text"><![CDATA[我们习惯的观念是尽可能地降低成成本，或许根本没有想过没有成本的世界会怎样。 交高额的学费，然后才能取得学习的机会，那么你一定珍惜机会，努力学习。因为已经交了学费，你学习的成本就只有因为读书而放弃的打工收入了。反过来，如果你不好好学习，要重头再学的话，那么你的成本还要加上那高额的学费。如果需要走很远的路、排很长的队，然后才能够参观博物馆，看画展，那么你一定看得仔细。反过来，如果很方便就可以去参观博物馆、看画展，那么你一定看得不那么仔细。 没有成本，人们做事就不会认真，对什么都不会珍惜。作为个人，我们都希望能够长生不老，但如果人人都长生不老的话，那么我们完全可以胡来，因为大不了从头再来。死亡是一个残酷的现实，但死亡也是一种纪律。没有死亡，这世界就会是一个无序的世界，会乱套的，也就没有人能够真正地活。 我的观点： 成本就像一道门槛，筛选掉没有志气、能力的人，也让已经跨过门槛的人更加珍惜。对此，我想引用王安石的话来补充一下： 古人之观于天地、山川、草木、虫鱼、鸟兽，往往有得，以其求思之深而无不在也。夫夷以近，则游者众；险以远，则至者少。而世之奇伟、瑰怪，非常之观，常在于险远，而人之所罕至焉，故非有志者不能至也。有志矣，不随以止也，然力不足者，亦不能至也。有志与力，而又不随以怠，至于幽暗昏惑而无物以相之，亦不能至也。然力足以至焉，于人为可讥，而在己为有悔；尽吾志也而不能至者，可以无悔矣，其孰能讥之乎？ 观点：谢作诗，王安石]]></content>
      <categories>
        <category>观点</category>
      </categories>
      <tags>
        <tag>观点</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MeArm —— 3D打印机械臂]]></title>
    <url>%2F2016%2F09%2F25%2FMeArm%2F</url>
    <content type="text"><![CDATA[先放个预告，有空整理 = =]]></content>
      <categories>
        <category>科技</category>
      </categories>
      <tags>
        <tag>Arduino</tag>
        <tag>C++</tag>
        <tag>教程</tag>
        <tag>3D打印</tag>
        <tag>作品</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何玩坏一个舵机]]></title>
    <url>%2F2016%2F09%2F15%2F%E5%A6%82%E4%BD%95%E7%8E%A9%E5%9D%8F%E4%B8%80%E4%B8%AA%E8%88%B5%E6%9C%BA%2F</url>
    <content type="text"><![CDATA[如图,这是一个9g舵机。如果拿来造小车的话，简直再好不过了： 体积小 自带驱动 但是，一个非常严重的问题这只是一个90°舵机，总不能让小车在一步之间走来走去吧 所以，今天来介绍一下把90°舵机改成360°舵机的方法 准备 螺丝刀 热熔胶枪 剪钳 第一步，拆开舵机 注意：一定要记住每个齿轮的位置！ 第二步，修改齿轮把最大的那个齿轮拣出来，用剪钳把后面凸起的地方剪掉找一只比轴的直径大一点的螺丝刀，给这个齿轮扩大一下内径，使之能在轴上自由转动 第三步，封死电位器在做这一步之前，我们必须先把舵机回到中位 找一块Arduino，打开IDE，给它来一段程序 //by Lin#include &lt;Servo.h&gt;Servo myservo;void setup() &#123; myservo.attach(9);//舵机连接Arduino的D9&#125;void loop() &#123; myservo.write(90); //让舵机回到中位&#125; 按图接上舵机，你会发现它一直在转。 把右边的轴来回转几圈，找到一个让电机停下来的位置（把这里的电位器调到中间的值 给电位器上胶，封死它。注意，这时候不要不小心把轴给转动了，如果这样，重新返回第三步。 第四步，组装把齿轮组装回去，注意不要弄错齿轮位置。把螺丝锁上，这样你就得到了一个360°连转舵机了。 第五步，调试换个程序 #include &lt;Servo.h&gt;Servo myservo; int pos = 0;void setup() &#123; myservo.attach(9); &#125;void loop() &#123; for (pos = 0; pos &lt;= 180; pos += 1) &#123; // in steps of 1 degree myservo.write(pos); delay(15); &#125; for (pos = 180; pos &gt;= 0; pos -= 1) &#123; myservo.write(pos); delay(15); &#125;&#125; 效果：舵机加速—减速—反方向加速—减速…… 拓展其实，舵机的创意还挺多的比如，代替减速电机做个Arduino小车；给智能手环刷一下步数；还有这个：逆天的舵机创意]]></content>
      <categories>
        <category>科技</category>
      </categories>
      <tags>
        <tag>Arduino</tag>
        <tag>C++</tag>
        <tag>教程</tag>
        <tag>改装</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[灵感并不那么值钱]]></title>
    <url>%2F2016%2F09%2F14%2F%E7%81%B5%E6%84%9F%E5%B9%B6%E4%B8%8D%E9%82%A3%E4%B9%88%E5%80%BC%E9%92%B1%2F</url>
    <content type="text"><![CDATA[人们对“创造性思维”的认识有三个迷信： 创新的关键是某个绝妙的灵感 灵感非常难得 想法越离奇越有价值 但真正的创造性思维不是这样的。 伟大的发现都是“慢慢地”得出来的 当牛顿看到苹果落地发现万有引力之前，就有多少人有过万有引力的设想，我们有充分理由推测牛顿的引力思想是“学”来的——借鉴前人的想法，使用了前人的数据，然后做出了无数计算验证。 在门捷列夫提出元素周期表之前，给元素分类已是显学，英国化学家纽兰兹已经发现用原子量大小进行排序具有明显的周期性，并把这种周期性称为“八音律”，这已经非常接近门捷列夫的周期表了。 伟大的发现并不是一蹴而就的，而是一系列小想法慢慢连接起来的结果。研究一个问题开始有个模糊的直觉，选择一个方向往下走，随着研究深入，新想法连接起来，得到新事实支持，慢慢长大。就像阿基米德的“尤里卡时刻”，伟大的突破是慢慢直觉积累到一定程度导致的。 别指望灵感，指望汗水灵感并不想人们想象的那样值钱。不管是科学家，艺术家还是企业家，都会产生各种想法，也许一百个里面只有一个最后证明是有用的。只要你愿意把想法一个个拿来尝试，失败就是你的日常生活，成功则是失败的副产品。 真正的创造力要求正确，有用真正的职业选手所做的大部分日常的创新，都是在当前基础上的改进。 有价值的“创造性思维”必须是“生之有根，长之靠谱”。所以，鼓励“创造性思维”应当鼓励尝试，鼓励失败，而不是鼓励妄想。 观点：万维钢]]></content>
      <categories>
        <category>观点</category>
      </categories>
      <tags>
        <tag>观点</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[淘汰人的从来都是工具，不是年龄]]></title>
    <url>%2F2016%2F09%2F14%2F%E6%B7%98%E6%B1%B0%E4%BA%BA%E7%9A%84%E4%BB%8E%E6%9D%A5%E9%83%BD%E6%98%AF%E5%B7%A5%E5%85%B7%EF%BC%8C%E4%B8%8D%E6%98%AF%E5%B9%B4%E9%BE%84%2F</url>
    <content type="text"><![CDATA[汽车淘汰马车，不是因为马匹不够强壮，而是因为工具的革命性迭代。一代人是怎么淘汰上一代人的？并不是因为更勤奋，更聪明，而是更乐于接受新的工具。 在新的工具面前，一切价值被重构，包括时间的意义和对能力的定义. 每一次工具革命发生的时候，原有生态链中既得利益者往往无法适应，他们的思维和运作体系已在原有的工具系统中形成惯性，在犹豫和恐惧中，新的竞争者已经刀逼颈部。 Lin的观点： 不禁想起《三体》中的”技术爆炸” “人类从狩猎时代到农业时代，用了十几万个地球年时间；从农业时代到工业时代用了几千地球年；而由工业时代到原子时代，只用了二百地球年；之后，仅用了几十个地球年，人类就进入了信息时代。” 在现代社会，人类的科技呈指数型发展。这个时代的工具衰老速度一定快于人的年龄的衰老。所以，我们要增强自己的适应能力，用积极的心态去接受不断更新的工具 观点：by吴晓波 改编：我]]></content>
      <categories>
        <category>观点</category>
      </categories>
      <tags>
        <tag>观点</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何应对干扰]]></title>
    <url>%2F2016%2F09%2F14%2F%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9%E5%B9%B2%E6%89%B0%2F</url>
    <content type="text"><![CDATA[当我在学习时，有时难免会遇到音乐等噪音的干扰。很多时候我无法改变环境，只能用意志力去抵抗，不断地提醒自己：“我要专心学习！不要理那些声音！我要战胜这些噪音!”但是这些斗争都是徒劳的，噪音根本无法从我的脑海中排除，而且这些斗争让我感觉非常烦躁，更难专心学习。 当我们无法改变环境时，当我们不得不面对外界的持续干扰时，我们没必要用意志力去对抗它，去排斥它，而应该做出一副接受他，欢迎它的姿势，这种乐观的姿态能减弱我们对它的排斥，从而减轻它对我们的干扰。 就像初学骑单车的时候，因为担心会摔伤，满脑子想着“一定要稳，千万不能失去平衡”，往右拼命扭车把，发现不对又很着急地往左扭，如此般扭来扭曲，不摔倒才怪。 面对干扰，先调整一下心态，尝试去接受它，甚至可以用欢迎的策略，告诉自己：“Come on!跪求你来得再猛烈一点吧，还不够！”一边在心中大喊，一边情不自禁地做出兴奋的表情和手势。这些奇葩的念头能把自己逗乐，让自己处于一种乐观的状态，也就不会那么反感，大脑很快就能忽视它。 观点：by吴业涛]]></content>
      <categories>
        <category>观点</category>
      </categories>
      <tags>
        <tag>观点</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[整蛊小玩意]]></title>
    <url>%2F2016%2F09%2F13%2F%E6%95%B4%E8%9B%8A%E5%B0%8F%E7%8E%A9%E6%84%8F%2F</url>
    <content type="text"><![CDATA[如题，这是一个一靠近就会发出奇怪的声音，而又很难被发现的小装置 成品图？没有。有空我会把它做出来 材料 人体红外热释电传感器（PIR） 蜂鸣器 (无源) Arduino 接线 Arduino sensors D2 PIR D3 Piezo 程序全都放在这 总结完？ 完。]]></content>
      <categories>
        <category>科技</category>
      </categories>
      <tags>
        <tag>Arduino</tag>
        <tag>C++</tag>
        <tag>教程</tag>
        <tag>作品</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[便携式测距仪]]></title>
    <url>%2F2016%2F09%2F11%2F%E4%BE%BF%E6%90%BA%E5%BC%8F%E6%B5%8B%E8%B7%9D%E4%BB%AA%2F</url>
    <content type="text"><![CDATA[想要一块能固定在手腕上的测距的工具吗？ 来玩玩这个项目吧 首先，你需要： HC-SR04超声波测距模块 OLED显示屏 （这里用的是ISP类型的） Arduino nano 锂电池 按钮/开关 接线： Arduino OLED HC-SR04 D13 SCK/D0 D11 MOSI/D1 D10 CS/DC D9 RST D8 Echo D7 Trig 程序#include&lt;U8glib.h&gt;U8GLIB_SSD1306_128X64 u8g(10, 9, 12, 11, 13);const int TrigPin = 7;const int EchoPin = 8;unsigned int distance;void setup() &#123; pinMode(TrigPin, OUTPUT); pinMode(EchoPin, INPUT); u8g.setColorIndex(1); &#125;void loop() &#123; digitalWrite(TrigPin, LOW); delayMicroseconds(2); digitalWrite(TrigPin, HIGH); delayMicroseconds(10); digitalWrite(TrigPin, LOW); distance = pulseIn(EchoPin, HIGH) / 58.00; u8g.firstPage(); do &#123; draw(); &#125; while ( u8g.nextPage() ); delay(100);&#125;void draw(void) &#123; u8g.setFont(u8g_font_ncenB24); u8g.drawStr( 80, 50, "cm"); u8g.setPrintPos(5, 50); u8g.print(distance);&#125; 总结这是个以前做过的项目，距今历史悠久，所以教程不是那么完整。请自己发挥想象，让它变得更可爱。有问题请在文章下面留言:D]]></content>
      <categories>
        <category>科技</category>
      </categories>
      <tags>
        <tag>Arduino</tag>
        <tag>C++</tag>
        <tag>教程</tag>
        <tag>作品</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown学习笔记]]></title>
    <url>%2F2016%2F09%2F11%2FMarkdown%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[另附 中文参考]]></content>
      <categories>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[方舟反应炉——模型]]></title>
    <url>%2F2016%2F09%2F11%2F%E6%96%B9%E8%88%9F%E5%8F%8D%E5%BA%94%E7%82%89%E2%80%94%E2%80%94%E6%A8%A1%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[造一副自己的铁衣 这是一个非常长远的目标 作为钢铁侠的脑残粉 我决定先给自己造个方舟反应炉 实现的功能： 阻止金属碎片进入心脏 （不可能） 提供强大的核反应能量 （想得美） 装装逼 （这个倒可以） 说了这么多，我们来看看它是怎样被造出来的吧 1.材料清单 一个环形LED模块 一块arduino板子 小小的锂电池 一个小开关（总不能一直亮着吧） 泡沫板 （用于把LED光线分散均匀） 硬纸板（做个后盖） 橡皮筋（方便挂在胸前） 2.把程序下载进arduino程序：源码需要先加载库文件 #include &lt;Adafruit_NeoPixel.h&gt;#ifdef __AVR__#include &lt;avr/power.h&gt;#endif#define NUMPIXELS 16#define PIN 6Adafruit_NeoPixel pixels = Adafruit_NeoPixel(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);// Parameter 1 = number of pixels in strip// Parameter 2 = Arduino pin number (most are valid)// Parameter 3 = pixel type flags, add together as needed:// NEO_KHZ800 800 KHz bitstream (most NeoPixel products w/WS2812 LEDs)// NEO_KHZ400 400 KHz (classic 'v1' (not v2) FLORA pixels, WS2811 drivers)// NEO_GRB Pixels are wired for GRB bitstream (most NeoPixel products)// NEO_RGB Pixels are wired for RGB bitstream (v1 FLORA pixels, not v2)Adafruit_NeoPixel strip = Adafruit_NeoPixel(60, PIN, NEO_GRB + NEO_KHZ800);// IMPORTANT: To reduce NeoPixel burnout risk, add 1000 uF capacitor across// pixel power leads, add 300 - 500 Ohm resistor on first pixel's data input// and minimize distance between Arduino and first pixel. Avoid connecting// on a live circuit...if you must, connect GND first.void setup() &#123;#if defined (__AVR_ATtiny85__) if (F_CPU == 16000000) clock_prescale_set(clock_div_1);#endif strip.begin(); strip.show(); colorWipe(strip.Color(0, 0, 255), 50); // Blue rainbow(10); //全部灯渐变色 rainbowCycle(10);//逐个刷新变色&#125;void loop() &#123; int x, y, z; for (x = 0; x &lt; 256; x++) &#123; for (y = 0; y &lt; 16; y++) &#123; strip.setPixelColor(y, x); &#125; strip.show(); delay(30); &#125; &#125;void colorWipe(uint32_t c, uint8_t wait) &#123; for (uint16_t i = 0; i &lt; strip.numPixels(); i++) &#123; strip.setPixelColor(i, c); strip.show(); delay(wait); &#125;&#125;void rainbow(uint8_t wait) &#123; uint16_t i, j; for (j = 0; j &lt; 256; j++) &#123; for (i = 0; i &lt; strip.numPixels(); i++) &#123; strip.setPixelColor(i, Wheel((i + j) &amp; 255)); &#125; strip.show(); delay(wait); &#125;&#125;// Slightly different, this makes the rainbow equally distributed throughoutvoid rainbowCycle(uint8_t wait) &#123; uint16_t i, j; for (j = 0; j &lt; 256 * 5; j++) &#123; // 5 cycles of all colors on wheel for (i = 0; i &lt; strip.numPixels(); i++) &#123; strip.setPixelColor(i, Wheel(((i * 256 / strip.numPixels()) + j) &amp; 255)); &#125; strip.show(); delay(wait); &#125;&#125;//Theatre-style crawling lights.void theaterChase(uint32_t c, uint8_t wait) &#123; for (int j = 0; j &lt; 10; j++) &#123; //do 10 cycles of chasing for (int q = 0; q &lt; 3; q++) &#123; for (int i = 0; i &lt; strip.numPixels(); i = i + 3) &#123; strip.setPixelColor(i + q, c); //turn every third pixel on &#125; strip.show(); delay(wait); for (int i = 0; i &lt; strip.numPixels(); i = i + 3) &#123; strip.setPixelColor(i + q, 0); //turn every third pixel off &#125; &#125; &#125;&#125;//Theatre-style crawling lights with rainbow effectvoid theaterChaseRainbow(uint8_t wait) &#123; for (int j = 0; j &lt; 256; j++) &#123; // cycle all 256 colors in the wheel for (int q = 0; q &lt; 3; q++) &#123; for (int i = 0; i &lt; strip.numPixels(); i = i + 3) &#123; strip.setPixelColor(i + q, Wheel( (i + j) % 255)); //turn every third pixel on &#125; strip.show(); delay(wait); for (int i = 0; i &lt; strip.numPixels(); i = i + 3) &#123; strip.setPixelColor(i + q, 0); //turn every third pixel off &#125; &#125; &#125;&#125;// Input a value 0 to 255 to get a color value.// The colours are a transition r - g - b - back to r.uint32_t Wheel(byte WheelPos) &#123; WheelPos = 255 - WheelPos; if (WheelPos &lt; 85) &#123; return strip.Color(255 - WheelPos * 3, 0, WheelPos * 3); &#125; if (WheelPos &lt; 170) &#123; WheelPos -= 85; return strip.Color(0, WheelPos * 3, 255 - WheelPos * 3); &#125; WheelPos -= 170; return strip.Color(WheelPos * 3, 255 - WheelPos * 3, 0);&#125; 实现的效果： 蓝色呼吸灯 开机有彩虹灯的特效 3.把主体打印出来链接：模型文件 4.组装1. 接线： LED模块 Arduino Din D6 VCC 5V GND GND 2. 到碗里来： 首先，把泡沫板切一个圆，直接压进去把Arduino和LED粘在上面电池可放里面，只是感觉空间太窄我直接把它外接出来 ps:如果还剩空间可以把打印件剪薄几层，太厚了不好看 3. 封印：厚纸板上裁个圆，作为后盖 用502粘上为了紧固橡皮筋，我另外粘了些胶带 史上最丑的设计 #完成！ 佩戴的效果图就不在这儿展示了，要看的话去GitHub仓库里找吧~ 写在最后： 此方舟反应炉功能也许还不完善，有空再做改进吧 如果你有任何问题，或者有更好的建议，欢迎随时和我交流。]]></content>
      <categories>
        <category>科技</category>
      </categories>
      <tags>
        <tag>Arduino</tag>
        <tag>C++</tag>
        <tag>教程</tag>
        <tag>3D打印</tag>
        <tag>作品</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[你好，世界]]></title>
    <url>%2F2016%2F09%2F10%2F%E4%BD%A0%E5%A5%BD%EF%BC%8C%E4%B8%96%E7%95%8C%2F</url>
    <content type="text"><![CDATA[我把第一篇文章命名为”Hello world”,这个代表着所有编程语言的开始的词语，也标志着这个全新的个人站点将会是一个与代码有关的园地。 历经千辛万苦，前前后后断断续续地造了两个多月，终于在Github pages上把网站建起来了。 目标：做一个会输出的人 “输出”比“输入”要累得多，把自己的思想和每天所收获的传递出去，多了一个反刍，咀嚼和表达的过程。相比“输入”，“输出”能使我感受到善用时间和努力的快乐。这就够了，不是吗 关于github pages 相比之前wordpress的富文本编辑器，pages为我提供了简洁的Markdown语法 蹭上hexo有好多好多的主题可以用 还是之前那句话，我喜欢青菜，对海鲜持有绝对不吃的观点。我是处女座，现在用的这个主题我很满意。 在这纷纷扰扰的世界里，与其临渊羡鱼，不如退而结网。每个人都有一张属于自己的网，织好这一张就够了。 完]]></content>
      <categories>
        <category>观点</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>文艺复兴</tag>
      </tags>
  </entry>
</search>